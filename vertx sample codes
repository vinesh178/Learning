		//Authorize with Jwt tokent
    
    Router router = Router.router(vertx);

		JWTAuth provider = JWTAuth.create(vertx, new JWTAuthOptions().addPubSecKey(
				new PubSecKeyOptions().setAlgorithm("HS256").setPublicKey("keyboard cat").setSymmetric(true)));

		router.route("/api/*").handler(JWTAuthHandler.create(provider, "/api/newToken"));

		router.get("/api/newToken").handler(ctx -> {
			ctx.response().putHeader("Content-Type", "text/plain");
			ctx.response().end(provider.generateToken(new JsonObject(), new JWTOptions().setExpiresInSeconds(60)));
		});

		router.get("/api/protected").handler(ctx -> {
			ctx.response().putHeader("Content-Type", "text/plain");
			ctx.response().end("a secret you should keep for yourself...");
		});

//		router.route().handler(StaticHandler.create());
		router.route().handler(BodyHandler.create());
		router.post("/api/login").handler(this::login);

		vertx.createHttpServer().requestHandler(router).listen(2815);
